" Basic Stuff {
    call pathogen#infect()
    syntax on
    filetype plugin indent on
    set nocompatible "vim, not vi
    set t_Co=256
    set ofu=syntaxcomplete#Complete "Turn on OmniCompletion

    scriptencoding utf-8
    set encoding=utf-8

" }

"" Options {
    set nohidden "remove the buffer when the tab is closed
    set wildmode=longest:full
    set wildmenu " better command-line completion
    set showcmd " partial commands in the last line
    set hlsearch " may want to change this to underline
    set showmatch  " show matching bracket
" }

" Usability {
    set ruler "show where we are
    set laststatus=2 "display the status line always
    set cmdheight=2 "two lines at the bottom, to keep things from getting hidden
    set pastetoggle=<F5> "so we can paste stuff without annoying indents

    " Show Whitespace
    set list
    set listchars=eol:¶,tab:»·,trail:ˍ,extends:›,precedes:‹ " Some other good chars (˷˽)
    hi SpecialText ctermfg=234 ctermbg=NONE cterm=NONE
    hi NonText ctermfg=234 ctermbg=NONE cterm=NONE

    " This toggles a paste mode that will turn off line numbers, the mouse, and list if they are enabled
    let g:old_nu=&nu " Sets the NU remember mode
    let g:old_mouse=&mouse " Sets the mouse remember mode
    let g:old_list=&list " Sets the mouse remember mode
    nmap <silent> <F2> :if &paste <Bar>
                \set nopaste <Bar>
                \let &nu=g:old_nu <Bar>
                \let &mouse=g:old_mouse <Bar>
                \let &list=g:old_list <Bar>
                \echo "(nu="g:old_nu") (mouse="g:old_mouse") (list="g:old_list") (paste= 0 )"<bar>
                \else <Bar>
                \let g:old_nu=&nu <Bar>
                \let g:old_mouse=&mouse <Bar>
                \let g:old_list=&list <Bar>
                \let &nu=0 <Bar>
                \let &mouse="" <Bar>
                \let &list=0 <Bar>
                \let &paste=1 <Bar>
                \echo "(nu= 0 ) (mouse=  ) (list= 0 ) (paste= 1 )"<bar>
                \endif <cr>

    " Toggle numbered lines on F3
    nmap <F3> :set number! number?<Bar>
                \echo "(nu="&nu") (mouse="&mouse") (list="&list") (paste="&paste")"<cr>
    " Toggle mouse on F4
    nmap <F4> :if &mouse=="" <Bar>
                \let &mouse="a" <Bar>
                \echo "(nu="&nu") (mouse= a ) (list="&list") (paste="&paste")"<bar>
                \else <Bar>
                \let &mouse="" <Bar>
                \echo "(nu="&nu") (mouse=  ) (list="&list") (paste="&paste")"<bar>
                \endif<cr>

" }


" indentation {
    set autoindent "indentation
    set shiftwidth=4
    set softtabstop=4
    set expandtab
    set backspace=indent,eol,start
    set textwidth=79
    set tabstop=8
" }
 
" nerdtree {
    let NERDTreeIgnore = ['\.pyc$', '\.pyo$']
    noremap gn :NERDTree<Cr>
" }

" Unsorted {
    set shortmess+=filmnrxoOtT      " abbrev. of messages (avoids 'hit enter')
    set viewoptions=folds,options,cursor,unix,slash " better unix / windows compatibility
    set virtualedit=onemore         " allow for cursor beyond last character
    set history=1000                " Store a ton of history (default is 20)
    set spell                       " spell checking on
    hi clear SpellBad
    hi SpellBad cterm=underline
    set showmode "display the current mode
    set cursorline "highlights the light we're on
    "set cursorcolumn "highlights the light we're on
    hi clear cursorline "We don't want an underline
    "hi clear cursorcolumn "We don't want an underline
    hi cursorline guibg=#111111 ctermbg=232 "Sets the highlight color
    "hi CursorColumn guibg=#333333 ctermbg=0 "highlights the cursor
    set whichwrap=b,s,h,l,<,>,[,] "wrap backspace and cursor

    "folding settings
    set foldmethod=indent   "fold based on indent
    set foldnestmax=10      "deepest fold is 10 levels
    set nofoldenable        "dont fold by default
    set foldlevel=1         "this is just what i use
" }
