#lias
#.bashrc file
#
# commandPrompt {
    source ~/dotfiles/bash/scripts/git-completion.bash # Git tab completion
    [ -z "$PS1" ] && return # If not running interactively, don't do anything

    # Determine if we're using Darwin or Linux, and set the color prompt accordingly
    OS_NAME=`uname -s`
    if [ "$OS_NAME" == "Darwin" ]; then
        # Darwin / OSX Config
        function parse_git_branch () {
            git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/' 
        }
        PS1='\u@\h:\w\[\033[34m\]$(parse_git_branch "%s")\[\033[00m\]ยง '
        alias ls='ls -G' # Color LS uses -G on OSX
        __bash_color_prefix='\033'
    else
        # Unix / Ubuntu Settings
        if [ -z "$TMUX" ]; then 
            PS1='\u@\h:\w$(__git_ps1 "\[\e[34m\][%s]\[\e[0m\]")ยง ' # Show git branch in status
       else
            TMUX_SESSION=`tmux list-panes | grep active | sed s/:.*//g`
            PS1='\u[$TMUX_SESSION]:\w$(__git_ps1 "\[\e[34m\][%s]\[\e[0m\]")ยง '
        fi
        alias ls='ls --color'
        __bash_color_prefix='\e'
    fi
# }

# customFunctions {
    # Add a bunch of color variables
    source ~/dotfiles/bash/scripts/bash_colors.sh
# }

# historySettings {
    HISTCONTROL=ignoreboth # don't put duplicate lines or lines starting with space in the history.
    shopt -s histappend # append to the history file, don't overwrite it
    HISTSIZE=1000 # for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
    HISTFILESIZE=2000
    shopt -s checkwinsize # check the window size after each command and, if necessary, update the values of LINES and COLUMNS.
# }

# colorSupport {
    # enable color support of ls and also add handy aliases
    if [ -x /usr/bin/dircolors ]; then
        test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
        #alias dir='dir --color=auto'
        #alias vdir='vdir --color=auto'

        alias grep='grep --color=auto'
        alias fgrep='fgrep --color=auto'
        alias egrep='egrep --color=auto'
        alias ccat='pygmentize'

        eval `dircolors ~/dotfiles/bash/scripts/dircolorsdb/dircolors.256dark`
    fi
# }

# aliases {
    # some more ls aliases
    alias ll='ls -alFh --color'
    alias la='ls -Ah --color'
    alias l='ls -CFh --color'

    # Add an "alert" alias for long running commands.  Use like so:
    #   sleep 10; alert
    # (not working on mac) alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

     # enable programmable completion features (you don't need to enable
    # this, if it's already enabled in /etc/bash.bashrc and /etc/profile
    # sources /etc/bash.bashrc).
    if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
        . /etc/bash_completion
    fi

    [ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)" # make less more friendly for non-text input files, see lesspipe(1)

# }

# customFunctions {
    # This script yells at me when I type some common commands in without fully
    # thinking about what I'm doing
    source ~/dotfiles/bash/scripts/customfunctions.sh
    source ~/dotfiles/bash/scripts/git-completion.sh
# }

# rvm {
    PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
# }

# flex {
    export PATH=/opt/flex/bin:$PATH
# }

# Use tmux on Linux only
if [ $OS_NAME = "Linux" ]; then
  export TERM="xterm-256color"
  if [ -z "$TMUX" ]; then
    # http://unix.stackexchange.com/questions/103898/how-to-start-tmux-with-attach-if-a-session-exists
    base_session='base_session'
    # Create a new session if it doesn't exist
    tmux has-session -t $base_session || tmux new-session -d -s $base_session
    # Are there any clients connected already?
    client_cnt=$(tmux list-clients | wc -l)
    if [ $client_cnt -ge 1 ]; then
        session_name=$base_session"-"$client_cnt
        tmux new-session -d -t $base_session -s $session_name
        tmux -u attach-session -t $session_name \; set-option destroy-unattached
    else
        tmux -u attach-session -t $base_session
    fi
fi
fi
